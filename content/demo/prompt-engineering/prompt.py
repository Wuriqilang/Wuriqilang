import openai
import os
from dotenv import load_dotenv,find_dotenv

_ = load_dotenv(find_dotenv()) # read local .env file

openai.api_key = os.getenv("OPENAI_API_KEY")

def get_completion(prompt, model = "gpt-3.5-turbo"):
  messages = [{"role":"user","content":prompt}]
  response = openai.ChatCompletion.create(
    model=model,
    messages=messages,
    temperature=0,
  )
  return response.choices[0].message["content"]


# text=f"""
# 你应该提供尽可能清晰、具体的指示，以表达你希望模型执行的任务。
# 这将引导模型朝向所需的输出，并降低收到无关或不正确响应的可能性。
# 不要将写清晰的提示与写简短的提示混淆。  
# 在许多情况下，更长的提示可以为模型提供更多的清晰度和上下文信息，从而导致更详细和相关的输出。
# """
# # 需要总结的文本内容
# prompt=f"""
# 把用三个反引号括起来的文本总结成一句话。
# ```{text}```
# """
# # 指令内容，使用 ``` 来分隔指令和待总结的内容

# prompt = f"""
# 请生成包括书名、作者和类别的三本虚构书籍清单，
# 并以 JSON 格式提供，其中包含以下键:book_id、title、author、genre。
# """

# text_1=f"""
# 泡一杯茶很容易。首先，需要把水烧开。
# 在等待期间，拿一个杯子并把茶包放进去。
# 一旦水足够热，就把它倒在茶包上。
# 等待一会儿，让茶叶浸泡。几分钟后，取出茶包。
# 如果你愿意，可以加一些糖或牛奶调味。
# 就这样，你可以享受一杯美味的茶了。
# """

# prompt = f"""
# 您将获得由三个引号括起来的文本。
# 如果它包含一系列的指令，则需要按照以下格式重新编写这些指令：

# 第一步 - ... \n
# 第二步 - ...
# ...
# 第N步 - ...

# 如果文本中不包含一系列的指令，则直接写“未提供步骤”。"

# \"\"\"{text_1}
# \"\"\"
# """


# prompt = f"""
# 你的任务是以一致的风格回答问题。

# <孩子>: 教我耐心。

# <祖父母>: 挖出最深峡谷的河流源于一处不起眼的泉眼；最宏伟的交响乐从单一的音符开始；最复杂的挂毯以一根孤独的线开始编织。

# <孩子>: 教我韧性。
# """



# text = f"""
# 李白乘舟将欲行, 忽闻岸上踏歌声。
# 桃花潭水深千尺, 不及汪伦送我情。
# """

# prompt = f"""
# 你的工作是:
# 1 - 一句话总结下面被三个反引号包裹的文本.
# 2 - 将总结翻译为法语
# 3 - 列出法语摘要中的每个名字
# 4 - 输出包含以下键的JSON对象: 法语摘要和名字数量统计

# 请用换行符分隔您的答案。

# 文本:
# ```{text}```
# """


# prompt = f"""
# 请判断学生的解决方案是否正确，请通过如下步骤解决这个问题：

# 步骤：

#     首先，自己解决问题。
#     然后将你的解决方案与学生的解决方案进行比较，并评估学生的解决方案是否正确。在自己完成问题之前，请勿决定学生的解决方案是否正确。

# 使用以下格式：

#     问题：问题文本
#     学生的解决方案：学生的解决方案文本
#     实际解决方案和步骤：实际解决方案和步骤文本
#     学生的解决方案和实际解决方案是否相同：是或否
#     学生的成绩：正确或不正确

# 问题：
#     我正在建造一个太阳能发电站，需要帮助计算财务。 
#     - 土地费用为每平方英尺100美元
#     - 我可以以每平方英尺250美元的价格购买太阳能电池板
#     - 我已经谈判好了维护合同，每年需要支付固定的10万美元，并额外支付每平方英尺10美元
#     作为平方英尺数的函数，首年运营的总费用是多少。

# 学生的解决方案：
#     设x为发电站的大小，单位为平方英尺。
#     费用：
#     1. 土地费用：100x
#     2. 太阳能电池板费用：250x
#     3. 维护费用：100,000+100x
#     总费用：100x+250x+100,000+100x=450x+100,000

# 实际解决方案和步骤：
# """

prompt = f"""
你的工作是:
1 - 查找关于阿里云组态产品的介绍文档,将他们列出来.
2 - 将列出来的文档总结成一句话.
3 - 结合总结,告诉我阿里云组态产品的特点
"""

response = get_completion(prompt)
print(response)

